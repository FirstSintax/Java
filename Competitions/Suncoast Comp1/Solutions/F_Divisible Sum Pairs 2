import java.util.Scanner;

public class FDivisibleSumPairs2 {

	//Realize that the naive solution at O(n^2) will TLE
	//Realize that in order to be divisible, the sum must be congruent to 0 mod m
	//Dynamically store the number of modulus' available to be paired with inside of input
	//Note that this can be done legally because all pairs (i, j) follows the constraint that i < j
	//O(n)

	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int n = in.nextInt(), k = in.nextInt();
		int[] numOfMods = new int[k];
		int ans = 0;
		for (int i = 0; i < n; i++) {
			int t = in.nextInt()%k;
			ans += numOfMods[(k - t)%k];
			numOfMods[t]++;
		}
		System.out.println(ans);
	}
	
}
